1 signup (hooyoo@gmail.com) = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imhvb3lvb0BnbWFpbC5jb20iLCJpYXQiOjE3MTY2MzIzNjEsImV4cCI6MTcxNzIzNzE2MX0.MjfLY9FB2G3stPPUMYh1oxGSmJzEqXQ8drYdbItJaNI

2 login (hooyoo@gmail.com) =  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjcsImVtYWlsIjoiaG9veW9vQGdtYWlsLmNvbSIsImlhdCI6MTcxNjYzMjQyMCwiZXhwIjoxNzE3MjM3MjIwfQ.XyYDEk8QzrC_gkyIz8GnsHLPpZggmnB6VFMtzQXUN5k

2 singup (yoohoo@gmail.com) = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inlvb2hvb0BnbWFpbC5jb20iLCJpYXQiOjE3MTY2MzI0MzQsImV4cCI6MTcxNzIzNzIzNH0.U_OxOaxFNjw8P4k-1Oo4uiYOWQ59C4RZhgdntTWrRac

3 login (yoohoo@gmail.com) = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Inlvb2hvb0BnbWFpbC5jb20iLCJpYXQiOjE3MTY2MzI0MzQsImV4cCI6MTcxNzIzNzIzNH0.U_OxOaxFNjw8P4k-1Oo4uiYOWQ59C4RZhgdntTWrRac

Step-by-Step Learning Path
Foundational Knowledge

Mathematics:

Linear Algebra: Start with Khan Academy or MIT OpenCourseWare.
Calculus: Follow up with single-variable calculus and then multi-variable calculus.
Probability and Statistics: Use resources like Khan Academy or “Introduction to Probability” by MIT.
Programming:

Python: Begin with basic Python courses (Codecademy, Coursera's Python for Everybody) and move on to data manipulation with libraries like NumPy and Pandas.
Libraries and Frameworks: Familiarize yourself with Jupyter Notebooks, then explore TensorFlow, Keras, and PyTorch.
Core Computer Science Concepts

Data Structures and Algorithms:

Use resources like “Data Structures and Algorithms” by Coursera, or "Algorithms" by Robert Sedgewick on Princeton’s site.
Practice on platforms like LeetCode, HackerRank, or CodeSignal.
Computer Architecture:

Understand basic concepts using books like “Computer Systems: A Programmer’s Perspective” or online resources like Coursera’s “Computer Architecture” course.
Machine Learning Basics

Introduction to Machine Learning:

Take Coursera’s Machine Learning by Andrew Ng to get a solid introduction.
Complement with hands-on tutorials from Kaggle.
Basic Algorithms:

Study and implement basic algorithms like Linear Regression, Logistic Regression, and Decision Trees.
Use Python libraries (Scikit-Learn) to practice these algorithms.
Advanced Machine Learning

Model Evaluation and Selection:

Learn about cross-validation, bias-variance tradeoff, and other model evaluation metrics.
Practical exercises using datasets to understand these concepts.
Feature Engineering:

Study techniques for feature selection, creation, and transformation.
Use real datasets to practice these techniques.
Deep Learning:

Take the Deep Learning Specialization by Andrew Ng on Coursera.
Implement neural networks using TensorFlow or PyTorch.
Practical Experience

Projects:

Start with basic projects (e.g., MNIST digit recognition) and gradually take on more complex ones.
Use Kaggle datasets to practice.
Competitions:

Participate in beginner-level Kaggle competitions.
Learn from kernels (shared solutions) and discussions on Kaggle.
Specialized Areas

Natural Language Processing (NLP):

Study using resources like the “Natural Language Processing” course by Stanford (available on Coursera).
Implement projects like text classification, chatbots, or language translation.
Computer Vision:

Learn about image processing and CNNs with courses like Coursera’s “Introduction to Computer Vision” or Fast.ai.
Work on projects like image classification or object detection.
Reinforcement Learning:

Study Markov Decision Processes, Q-learning, and deep reinforcement learning.
Implement projects using OpenAI’s Gym environment.
Further Learning and Research

Advanced Courses and Books:

Take advanced courses on specific topics of interest (e.g., generative models, advanced NLP, etc.).
Read foundational and recent research papers in AI.
Keeping Updated:

Follow AI newsletters, join AI communities, and stay informed about recent advancements.
Soft Skills and Networking

Communication and Collaboration:

Practice explaining your projects and findings to others.
Contribute to open-source projects on GitHub.
Networking:

Attend meetups, join forums like Reddit’s r/MachineLearning, and engage with the community on Twitter and LinkedIn.
Tips for Learning:
Consistency: Dedicate regular time to learning and practicing.
Hands-On Practice: Apply what you learn through projects and exercises.
Resources: Use a variety of resources like online courses, textbooks, tutorials, and research papers.
Community: Engage with the ML/AI community for support, feedback, and networking opportunities.